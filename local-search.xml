<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>常见应用的安装渠道指引</title>
    <link href="/2024/02/27/%E5%B8%B8%E8%A7%81%E5%BA%94%E7%94%A8%E7%9A%84%E5%AE%89%E8%A3%85%E6%B8%A0%E9%81%93%E6%8C%87%E5%BC%95/"/>
    <url>/2024/02/27/%E5%B8%B8%E8%A7%81%E5%BA%94%E7%94%A8%E7%9A%84%E5%AE%89%E8%A3%85%E6%B8%A0%E9%81%93%E6%8C%87%E5%BC%95/</url>
    
    <content type="html"><![CDATA[<p><code>AOSC OS</code>的应用商店正在筹划中。在其正式上线之前，为方便安装应用，故有此文向用户介绍常见应用的安装渠道。</p><h2 id="amd64架构"><a href="#amd64架构" class="headerlink" title="amd64架构"></a>amd64架构</h2><h2 id="LoongArch"><a href="#LoongArch" class="headerlink" title="LoongArch"></a>LoongArch</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>体验最新的AOSCOS系统安装器</title>
    <link href="/2024/02/27/%E4%BD%93%E9%AA%8C%E6%9C%80%E6%96%B0%E7%9A%84AOSCOS%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F/"/>
    <url>/2024/02/27/%E4%BD%93%E9%AA%8C%E6%9C%80%E6%96%B0%E7%9A%84AOSCOS%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<p>AOSCOS系统安装器分为前端<a href="https://github.com/AOSC-Dev/deploykit-gui">deploykit-gui</a>和后端<a href="https://github.com/AOSC-Dev/deploykit-backend">deploykit-backend</a>。</p><h2 id="更新系统并安装依赖"><a href="#更新系统并安装依赖" class="headerlink" title="更新系统并安装依赖"></a>更新系统并安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo oma upgrade<br>sudo oma install devel-base llvm parted rustc yarn<br></code></pre></td></tr></table></figure><h2 id="编译deploykit-gui"><a href="#编译deploykit-gui" class="headerlink" title="编译deploykit-gui"></a>编译<code>deploykit-gui</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/AOSC-Dev/deploykit-gui.git<br><span class="hljs-built_in">cd</span> deploykit-gui<br>yarn &amp;&amp; yarn tauri build<br></code></pre></td></tr></table></figure><h2 id="编译deploykit-backend"><a href="#编译deploykit-backend" class="headerlink" title="编译deploykit-backend"></a>编译<code>deploykit-backend</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/AOSC-Dev/deploykit-backend<br><span class="hljs-built_in">cd</span> deploykit-backend<br>cargo build --release<br></code></pre></td></tr></table></figure><p>完成编译后，将<code>deploykit-backend/deploykit-dbus.conf.debug</code>重命名为<code>deploykit-dbus.conf</code>，将以下编译成果存放到其他介质上，确保下文启动的<code>livekit</code>环境能访问到它们：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">deploykit-gui/src-tauri/target/release/deploykit-gui <br>deploykit-backend/deploykit-dbus.conf<br>deploykit-backend/target/release/deploykit-backend<br></code></pre></td></tr></table></figure><h2 id="启动livekit环境"><a href="#启动livekit环境" class="headerlink" title="启动livekit环境"></a>启动livekit环境</h2><ol><li><p>在官网下载对应架构的<a href="https://aosc.io/zh-cn/downloads/">livekit</a>镜像，并刻盘启动。</p></li><li><p>在启动<code>livekit</code>环境后，将上文的<code>deploykit-dbus.conf</code>复制到<code>/usr/share/dbus-1/system.d/</code>下：</p></li><li><p>运行后端，在<code>deploykit-backend</code>所在目录执行：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ./deploykit-backend<br></code></pre></td></tr></table></figure><ol start="4"><li>运行前端，在<code>deploykit-gui</code>所在目录执行：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./deploykit-gui<br></code></pre></td></tr></table></figure><h2 id="故障处理"><a href="#故障处理" class="headerlink" title="故障处理"></a>故障处理</h2><ol><li><code>cargo build --release</code>报错，需要更新版本的<code>rustc</code>：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">error: package `zvariant_derive v4.0.0` cannot be built because it requires rustc 1.75 or newer, <span class="hljs-keyword">while</span> the currently active rustc version is 1.74.0<br>Either upgrade to rustc 1.75 or newer, or use<br>cargo update zvariant_derive@4.0.0 --precise ver<br><span class="hljs-built_in">where</span> `ver` is the latest version of `zvariant_derive` supporting rustc 1.74.0<br><br></code></pre></td></tr></table></figure><p>使用<code>sudo oma topic</code>打开测试源，按<code>Enter</code>或空格键选中<code>rustc 1.75</code>或者更高版本。而后按<code>ESC</code>应用更改，等待<code>oma</code>刷新信息后，审阅并安装新版本<code>rustc</code>，再执行<code>cargo build --release</code></p><ol start="2"><li>编译<code>deploykit-gui</code>时报错，提示生成deb失败：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">Bundling deploykit-gui_0.0.0_amd64.deb (deploykit-gui/src-tauri/target/release/bundle/deb/deploykit-gui_0.0.0_amd64.deb)<br>       Error failed to bundle project: Failed to build data folders and files<br>error Command failed with <span class="hljs-built_in">exit</span> code 1.<br>info Visit https://yarnpkg.com/en/docs/cli/run <span class="hljs-keyword">for</span> documentation about this <span class="hljs-built_in">command</span>.<br></code></pre></td></tr></table></figure><p>不用担心，这是正常现象，忽略即可。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>在AOSCOS上安装steamcmd</title>
    <link href="/2024/02/27/%E5%9C%A8aoscos%E4%B8%8A%E5%AE%89%E8%A3%85steamcmd/"/>
    <url>/2024/02/27/%E5%9C%A8aoscos%E4%B8%8A%E5%AE%89%E8%A3%85steamcmd/</url>
    
    <content type="html"><![CDATA[<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo oma install gcc+32<br></code></pre></td></tr></table></figure><h2 id="下载并解压缩适用于-Linux-的-SteamCMD"><a href="#下载并解压缩适用于-Linux-的-SteamCMD" class="headerlink" title="下载并解压缩适用于 Linux 的 SteamCMD"></a>下载并解压缩适用于 Linux 的 SteamCMD</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -sqL <span class="hljs-string">&quot;https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz&quot;</span> | tar zxvf -<br></code></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./steamcmd.sh<br></code></pre></td></tr></table></figure><p>等待steamcmd更新完成，您就可以享用此应用了！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://developer.valvesoftware.com/wiki/SteamCMD:zh-cn">VALVE Developer Community</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>在AOSCOS上安装1Panel</title>
    <link href="/2024/02/27/%E5%9C%A8aoscos%E4%B8%8A%E5%AE%89%E8%A3%851Panel/"/>
    <url>/2024/02/27/%E5%9C%A8aoscos%E4%B8%8A%E5%AE%89%E8%A3%851Panel/</url>
    
    <content type="html"><![CDATA[<h2 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo oma upgrade<br></code></pre></td></tr></table></figure><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo oma install docker<br></code></pre></td></tr></table></figure><h2 id="安装1panel"><a href="#安装1panel" class="headerlink" title="安装1panel"></a>安装1panel</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; sudo bash quick_start.sh<br></code></pre></td></tr></table></figure><p>等待安装完成，您就可以享用1Panel了！</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://1panel.cn/docs/installation/online_installation/">在线安装-1Panel文档</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>vscode提示os-keyring不可用于加密</title>
    <link href="/2024/02/27/vscode-os-keyring-error/"/>
    <url>/2024/02/27/vscode-os-keyring-error/</url>
    
    <content type="html"><![CDATA[<h2 id="故障现象"><a href="#故障现象" class="headerlink" title="故障现象"></a>故障现象</h2><p>vscode在同步登陆&#x2F;插件登陆后提示“os keyring不可用于加密，请确保kwaller正在运行，提示信息如图：</p><p><img src="/../imgs/vscode-os-keyring-error.png" alt="os keyring不可用于加密，请确保kwaller正在运行"></p><h2 id="使用gnome-keyring"><a href="#使用gnome-keyring" class="headerlink" title="使用gnome-keyring"></a>使用gnome-keyring</h2><ol><li>安装<code>gnome-keyring</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo oma install gnome-keyring<br></code></pre></td></tr></table></figure><ol start="2"><li>在<code>vscode</code>中启用<code>gnome-keyring</code></li></ol><ul><li>方式一：编辑<code>～/.vscode/argv.json</code>，在最后一个配置项后添加以下内容，保存并重启<code>vscode</code></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;password-store&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;gnome-libsecret&quot;</span><span class="hljs-punctuation">,</span><br></code></pre></td></tr></table></figure><ul><li>方式二：在<code>vscode</code>中，使用快捷键<code>CTRL + shift + P</code>，打开命令面板，找到<code>首先项: Configure Runtime Arguments</code>并打开：</li></ul><p><img src="/../imgs/vscode-Configure-Runtime-Arguments.png" alt="首选项: Configure Runtime Arguments"></p><p>在打开的配置文件中，添加以下项，保存并重启<code>vscode</code>。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;password-store&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;gnome-libsecret&quot;</span><span class="hljs-punctuation">,</span><br></code></pre></td></tr></table></figure><p>注意：每一项配置应以<code>,</code>结尾，参考下图</p><p><img src="/../imgs/vscode-argv-json.png" alt="参考配置"></p><p>接下来，您就可以享用<code>vscode</code>了！</p><h2 id="额外事项"><a href="#额外事项" class="headerlink" title="额外事项"></a>额外事项</h2><ol><li>根据<code>vscode</code>官方文档，其在<code>kde</code>桌面环境上可以使用<code>kwalletmanager5（org.kde.kwalletmanager5）</code>来管理加密，但AOSCOS上的<code>kwalletmanager5</code>打开后无响应。故障原因是<code>discover</code>中的<code>kwalletmanager5</code>为<code>flatpak</code>版，此版本存在兼容性问题。建议用户使用<code>oma</code>安装<code>kwalletmanager5</code>：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo oma install kwalletmanager<br></code></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://code.visualstudio.com/docs/editor/settings-sync#_recommended-configure-the-keyring-to-use-with-vs-code">Setting Sync in Visual Studio Code</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>vscode 应用修复</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/02/01/hello-world/"/>
    <url>/2024/02/01/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>AMD Radeon 显卡视频硬解功能可能存在故障</title>
    <link href="/2024/01/03/%E6%98%BE%E5%8D%A1%E8%A7%86%E9%A2%91%E7%A1%AC%E8%A7%A3%E5%8A%9F%E8%83%BD%E5%8F%AF%E8%83%BD%E5%AD%98%E5%9C%A8%E6%95%85%E9%9A%9C/"/>
    <url>/2024/01/03/%E6%98%BE%E5%8D%A1%E8%A7%86%E9%A2%91%E7%A1%AC%E8%A7%A3%E5%8A%9F%E8%83%BD%E5%8F%AF%E8%83%BD%E5%AD%98%E5%9C%A8%E6%95%85%E9%9A%9C/</url>
    
    <content type="html"><![CDATA[<p>根据用户反馈，GCN (Graphics Core Next) 架构前较老的 AMD Radeon 显卡（如信创硬件上较为常见的 AMD Radeon R5 230 和 HD7350 两个型号）上无法正常使用硬件视频解码加速（简称硬解），其症状为视频画面为全黑或有大量杂斑</p><p>经调查，该问题是由 Mesa 23.3 引入的 (<a href="https://gitlab.freedesktop.org/mesa/mesa/-/issues/10345)%EF%BC%8C%E4%B8%94%E6%9A%82%E6%97%A0%E7%A8%B3%E5%AE%9A%E7%89%88%E6%9C%AC%E4%BF%AE%E5%A4%8D%E4%BA%86%E8%BF%99%E4%B8%80%E9%97%AE%E9%A2%98%EF%BC%9B%E5%9B%A0%E6%AD%A4%EF%BC%8C%E6%88%91%E4%BB%AC%E5%BB%BA%E8%AE%AE%E6%AD%A4%E7%B1%BB%E6%98%BE%E5%8D%A1%E7%94%A8%E6%88%B7%E6%9A%82%E6%97%B6%E6%89%93%E5%BC%80">https://gitlab.freedesktop.org/mesa/mesa/-/issues/10345)，且暂无稳定版本修复了这一问题；因此，我们建议此类显卡用户暂时打开</a> Mesa 24 测试源，方可缓解这一问题</p><p>请输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo oma topics<br></code></pre></td></tr></table></figure><p>输入 mesa-24，按 Enter 或空格键选中该测试源，而后按 Esc 应用更改，方可收到版本为 1:23.3.2+git20240103+dxheaders1.611.0 的 mesa 更新；更新安装完成后，请重启电脑</p><p>Mesa 24 的稳定版本预计将于二月发布，在此之前请保持该测试源打开以便保障视频硬解功能可用</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
